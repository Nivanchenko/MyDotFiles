"NIvanchenko 
set nocompatible
"filetype plugin on
filetype off
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Vundle For Managing Plugins
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" set the runtime path to include Vundle and initialize
set rtp+=~/.config/nvim/vim/bundle/Vundle.vim

call vundle#begin()		" required, all plugins must appear after this line.
"{{ The Basics }}
    Plugin 'gmarik/Vundle.vim'                           " Vundle
    Plugin 'itchyny/lightline.vim'                       " Lightline statusbar
    Plugin 'delimitMate.vim'                             " brakets and stuff
    Plugin 'neoclide/coc.nvim'
    Plugin 'morhetz/gruvbox'
"{{ File management }}
    Plugin 'vifm/vifm.vim'                               " Vifm
    Plugin 'vim-vdebug/vdebug'                           " Python and other debuggin'
    Plugin 'easymotion/vim-easymotion'                   " movement
    Plugin 'junegunn/fzf.vim'
"--------------=== 1С(BSL)===---------------
    Plugin 'andreevlex/vim-language-1c-bsl' "
    Plugin 'majutsushi/tagbar'          	            " Class/module browser
    Plugin 'garbas/vim-snipmate'		                " Snippets manager
    Plugin 'MarcWeber/vim-addon-mw-utils'	            " dependencies #1
    Plugin 'tomtom/tlib_vim'		                    " dependencies #2
"-------------------------------------------
call vundle#end()		" required, all plugins must appear before this line.

filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
" filetype plugin on

" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal

" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

" enable syntax and plugins (for netrw)
syntax enable

"--------------=== 1С(BSL)===---------------
" указываем каталог с настройками SnipMate
let g:snippets_dir = "~/.config/nvim/vim/bundle/vim-language-1c-bsl/snippets "
nnoremap <C-b> :set syntax=bsl<CR>

colorscheme gruvbox
set background=dark

" Light line config
let g:lightline = {
      \ 'colorscheme': 'seoul256',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'readonly', 'filename', 'modified', 'keymap' ] ]
      \ },
      \ 'component_function': {
      \   'keymap': 'LightLineKeymap'
      \ },
      \ }

function! LightLineKeymap()
    let km = &iminsert == 0 ? 'en' : 'ru'
    call lightline#update()
    return km
endfunction

let python_highlight_all=1

" Cursor lines
:nnoremap H :set cursorline! cursorcolumn!<CR>

" highlight Pmenu ctermbg=238 gui=bold  " ctermbg=gray guibg=gray
"highlight Pmenu ctermfg=NONE ctermbg=240 cterm=NONE guifg=NONE guibg=#64666d gui=NONE
"highlight PmenuSel ctermfg=NONE ctermbg=24 cterm=NONE guifg=NONE guibg=#204a87 gui=NONE

hi Normal guibg=NONE ctermbg=NONE

"set mousemodel=popup
set number 
set relativenumber
highlight LineNr ctermfg=grey

set laststatus=2
set noshowmode

set keymap=russian-jcukenwin
set iminsert=0 
set imsearch=0
inoremap <C-l> <C-^>
"nnoremap <C-l> <C-^>
highlight lCursor guifg=NONE guibg=Cyan 

:set mouse=n
:nmap <LeftMouse> <nop>
:imap <LeftMouse> <nop>
:vmap <LeftMouse> <nop>

:nmap <2-LeftMouse> <nop>
:imap <2-LeftMouse> <nop>
:vmap <2-LeftMouse> <nop>

:map <leader>c "+y
:map <leader>v "+p

" Buffers 
nnoremap <Leader>] :bn<CR>
nnoremap <Leader>[ :bp<CR>

" Easy Motion
map <leader><leader>. <Plug>(easymotion-repeat)
map <leader><leader>f <Plug>(easymotion-overwin-f)
map <leader><leader>j <Plug>(easymotion-overwin-line)
map <leader><leader>k <Plug>(easymotion-overwin-line)
map <leader><leader>w <Plug>(easymotion-overwin-w)
map <Leader><Leader>l <Plug>(easymotion-lineforward)
map <Leader><Leader>h <Plug>(easymotion-linebackward)

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Open terminal inside Vim
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
map <Leader>tt :sp .<CR> :term<CR>
map <Leader>vt :vs .<CR> :term<CR>

" unfocus term
tnoremap <ESC><ESC> <C-\><C-N>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Text, tab and indent related
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set expandtab                   " Use spaces instead of tabs.
set smarttab                    " Be smart using tabs ;)
set shiftwidth=4                " One tab == four spaces.
set tabstop=4                   " One tab == four spaces.

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Vifm
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
map <Leader>vv :Vifm<CR>
map <Leader>vs :VsplitVifm<CR>
map <Leader>sp :SplitVifm<CR>
map <Leader>dv :DiffVifm<CR>
map <Leader>tv :TabVifm<CR>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Splits and Tabbed Files
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set splitbelow splitright
" Remap splits navigation to just CTRL + hjkl
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Make adjusing split sizes a bit more friendly
noremap <silent> <C-Left> :vertical resize +3<CR>
noremap <silent> <C-Right> :vertical resize -3<CR>
noremap <silent> <C-Up> :resize +3<CR>
noremap <silent> <C-Down> :resize -3<CR>

" Change 2 split windows from vert to horiz or horiz to vert
map <Leader>th <C-w>t<C-w>H
map <Leader>tk <C-w>t<C-w>K

" Removes pipes | that act as seperators on splits
"set fillchars+=vert:\ 

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Mouse Scrolling
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"set mouse=nicr


set path+=**

" Display all matching files when we tab complete
set wildmenu

" NOW WE CAN:
" - Hit tab to :find by partial match
" - Use * to make it fuzzy

" Create the `tags` file (may need to install ctags first)
command! MakeTags !ctags -R .

" NOW WE CAN:
" - Use ^] to jump to tag under cursor
" - Use g^] for ambiguous tags
" - Use ^t to jump back up the tag stack

" FILE BROWSING:

" Tweaks for browsing
let g:netrw_banner=0        " disable annoying banner
let g:netrw_browse_split=4  " open in prior window
let g:netrw_altv=1          " open splits to the right
let g:netrw_liststyle=3     " tree view
let g:netrw_list_hide=netrw_gitignore#Hide()
let g:netrw_list_hide.=',\(^\|\s\s\)\zs\.\S\+'

" NOW WE CAN:
" - :edit a folder to open a file browser
" - <CR>/v/t to open in an h-split/v-split/tab
" - check |netrw-browse-maps| for more mappings

